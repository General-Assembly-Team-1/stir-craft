# ==============================================================================
# Nginx Configuration for StirCraft Development Environment
# ==============================================================================
# This configuration serves the Django application through Nginx in development.
# It handles static files, media uploads, and proxies API requests to Django.
# ==============================================================================

# Upstream Django application server
upstream django_app {
    # Point to the Django container
    server web:8000;
}

# HTTP Server Block
server {
    listen 80;
    server_name localhost 127.0.0.1;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Logging
    access_log /var/log/nginx/stircraft_access.log;
    error_log /var/log/nginx/stircraft_error.log;
    
    # Maximum file upload size (for cocktail images, etc.)
    client_max_body_size 10M;
    
    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Serve static files directly (CSS, JS, images)
    location /static/ {
        alias /var/www/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Handle missing files gracefully
        try_files $uri $uri/ =404;
    }
    
    # Serve media files directly (user uploads)
    location /media/ {
        alias /var/www/media/;
        expires 30d;
        add_header Cache-Control "public";
        
        # Security: Prevent execution of uploaded files
        location ~* \.(php|phtml|pl|py)$ {
            deny all;
        }
        
        try_files $uri $uri/ =404;
    }
    
    # Health check endpoint
    location /health/ {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Proxy all other requests to Django
    location / {
        proxy_pass http://django_app;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        
        # Handle WebSocket upgrades (if needed for real-time features)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Django admin static files (special case)
    location /admin/static/ {
        alias /var/www/static/admin/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Favicon
    location /favicon.ico {
        alias /var/www/static/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
        log_not_found off;
    }
    
    # Robots.txt
    location /robots.txt {
        alias /var/www/static/robots.txt;
        expires 1d;
        add_header Cache-Control "public";
        log_not_found off;
    }
}
