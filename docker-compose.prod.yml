# ==============================================================================
# Production Docker Compose Override
# ==============================================================================
# This file extends docker-compose.yml with production-specific configurations.
# It should be used in production environments only.
#
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up
# ==============================================================================

version: '3.8'

services:
  
  # ----------------------------------------------------------------------------
  # Production Database Configuration
  # ----------------------------------------------------------------------------
  db:
    # Use production-grade PostgreSQL settings
    environment:
      # Use strong password from environment variable
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    
    # Remove port exposure for security (only internal access)
    ports: []
    
    # Production-optimized PostgreSQL configuration
    command: >
      postgres 
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200

  # ----------------------------------------------------------------------------
  # Production Redis Configuration
  # ----------------------------------------------------------------------------
  redis:
    # Remove port exposure for security
    ports: []
    
    # Production Redis configuration
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 512mb 
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --timeout 300

  # ----------------------------------------------------------------------------
  # Production Web Application Configuration
  # ----------------------------------------------------------------------------
  web:
    # Production environment variables
    environment:
      # Security settings
      DEBUG: "False"
      SECRET_KEY: ${SECRET_KEY}
      ALLOWED_HOSTS: ${ALLOWED_HOSTS}
      
      # Database connection with SSL
      DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=require
      
      # Redis connection
      REDIS_URL: redis://redis:6379/0
      
      # Email settings (production SMTP)
      EMAIL_BACKEND: "django.core.mail.backends.smtp.EmailBackend"
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USE_TLS: "True"
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      
      # Security headers
      SECURE_SSL_REDIRECT: "True"
      SECURE_HSTS_SECONDS: "31536000"
      SECURE_HSTS_INCLUDE_SUBDOMAINS: "True"
      SECURE_HSTS_PRELOAD: "True"
      
      # Logging
      LOG_LEVEL: "INFO"
      
      # Optional: External services
      SENTRY_DSN: ${SENTRY_DSN:-}
    
    # Don't mount source code in production (use built image)
    volumes:
      - static_files:/app/stircraft/stir_craft/staticfiles
      - media_files:/app/stircraft/stir_craft/media
    
    # Remove port exposure (nginx will handle external traffic)
    ports: []
    
    # Production command using Gunicorn
    command: >
      sh -c "
        python stircraft/manage.py collectstatic --noinput &&
        python stircraft/manage.py migrate &&
        gunicorn stircraft.wsgi:application
          --bind 0.0.0.0:8000
          --workers ${GUNICORN_WORKERS:-4}
          --worker-class sync
          --worker-connections 1000
          --max-requests 1000
          --max-requests-jitter 100
          --timeout 120
          --keepalive 5
          --log-level info
          --access-logfile -
          --error-logfile -
      "

  # ----------------------------------------------------------------------------
  # Production Nginx Configuration
  # ----------------------------------------------------------------------------
  nginx:
    # Enable nginx in production
    profiles: []
    
    # Production nginx volumes with SSL certificates
    volumes:
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/production.conf:/etc/nginx/conf.d/default.conf:ro
      - static_files:/var/www/static:ro
      - media_files:/var/www/media:ro
      # SSL certificates (Let's Encrypt or custom)
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
    
    # Standard HTTP/HTTPS ports
    ports:
      - "80:80"
      - "443:443"
